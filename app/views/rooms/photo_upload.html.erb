<div class="row">
  <%= render "rooms/room_menu" %>

  <div class="col m9 s12">
    <div class="card">
      <div class="card-content">
        <span class="card-title center-allign">写真アップロード</span>

        <%= form_for @photo, html: {multipart: true, class:"dropzone", id:"my-dropzone"} do |f| %>

          <%= f.hidden_field :room_id, value: @room.id %>
          <div class="dz-message needsclick">
              <h5>ファイルをここにドロップしてください。</h5>
              <strong>アップロードするにはここをクリックしてください</strong>
          </div>

          <div class="fallback">
              <%= f.file_field :image %>
              <%= f.submit "Upload image" %>
          </div>


        <% end %>

        <div id="photos"><%= render 'roomphotos/roomphotos_list' %></div>

      </div>
    </div>
  </div>
</div>


<!-- dropzone.js -->
<script type="text/javascript">
  $(function () {
  Dropzone.autoDiscover = false;
  //photos_controller.rbのcreateアクションが呼ばれる
  $("#my-dropzone").dropzone({
    maxFilesize: 50,// MB
    addRemoveLinks: true,//削除リンク,Cancelリンクを全てのpreviewファイルに付ける。 
    paramName: 'roomphoto[image]',// パラメータの名前
    success: function(file, response) {
      // file.previewElementでpreview要素のhtmlにアクセスできる
      //add .dz-success class to file.previewElement 
      $(file.previewElement).addClass('dz-success');
      //add response.uploadId to .dz-remove class
      $(file.previewElement).find('.dz-remove').attr('id', response.photoId);
    },
    removedfile: function(file) {
      // 削除選択されたfileのidを取得
      var id = $(file.previewTemplate).find('.dz-remove').attr('id');
      //call photos_controler.rb destroy action
      $.ajax({
        type: 'DELETE',
        url: "/roomphotos/" + id,
        success: function(data) {
          console.log(data.message);
        }
      });

      var previewElement;
      // 条件式 ? 式1 : 式2　条件式の値がtrue=>式1、false=>式2返します。
      //parentNode => 親ノード（一つ上のhtml要素)を取得.
      //(void 0) => 何も処理しない
      // リスト（親ノード）から、プレビュー要素を消すという記述
      return (previewElement = file.previewElement) != null ? (previewElement.parentNode.removeChild(file.previewElement)) : (void 0);
    },
    // init executed at first when Page loaded
    init: function() {
      //this equal dropzone
      var me = this;

      //meに"complete"イベントを定義
      me.on("complete", function(file) {
       $(file.previewTemplate).find('.dz-remove').text("削除する");
      }); 
      //call list function in photos_controller.rb with get method
      $.ajax({
       type: "GET",
       url: "/roomphotos/list",
       data: {'room_id': <%= @room.id %>},
           dataType: 'json',
       success: function(data){
           $.each(data.images, function(key, value) {
             if (data.images != undefined && data.images.length > 0) {
               me.emit("addedfile", value); //addedfileイベントをvalueのデータで実行する
               me.emit("thumbnail", value, value.src);//thumbnailイベントをvalueのデータで実行する
               me.emit("complete", value);  //completeイベントをvalueのデータで実行する
               $(value._removeLink).attr("id", value.id); //valueの_removeLinkのidにvalue.idを追加
             }
           });
       }
      });
    }
  });
});
</script>